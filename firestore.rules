
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Function to identify admin users (update with your actual admin emails)
    function isAdmin() {
      // Replace with your actual admin email(s)
      let adminEmails = ['tumbikarthik2797@gmail.com', 'deepakperumal09@gmail.com'];
      return request.auth != null && request.auth.token.email in adminEmails;
    }

    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth != null && request.auth.uid == userId;
    }

    // Service Bookings collection
    match /serviceBookings/{bookingId} {
      allow create: if request.auth != null && request.resource.data.userEmail == request.auth.token.email;
      // User can read their own bookings, admin can read any
      allow read: if request.auth != null && (resource.data.userEmail == request.auth.token.email || isAdmin());
      // Admin can list all bookings
      allow list: if request.auth != null && isAdmin();
      // Admin can update any booking (e.g., status)
      allow update: if request.auth != null && isAdmin();
    }

    // Counters collection for booking ID
    match /counters/serviceBookingCounter {
      // Allow ANY authenticated user to read AND write this specific document.
      // This is absolutely necessary for the booking ID generation transaction to succeed
      // if request.auth is correctly propagated to the server action.
      allow read, write: if request.auth != null;
    }
  }
}
