
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      // Ensure request.auth and request.auth.token are not null before accessing email
      return request.auth != null && request.auth.token != null && request.auth.token.email in ['tumbikarthik2797@gmail.com', 'deepakperumal09@gmail.com'];
    }

    // Users collection
    match /users/{userId} {
      // Allow users to read and write their own profile data
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      // Allow anyone to create a user profile (e.g., on signup)
      allow create: if request.auth != null;
    }

    // Service Bookings collection
    match /serviceBookings/{bookingId} {
      // Allow authenticated users to create bookings
      allow create: if request.auth != null;
      
      // Allow users to read their own bookings
      // (This rule might need an index on userEmail if not already present for queries)
      allow read: if request.auth != null && resource.data.userEmail == request.auth.token.email;
      
      // Allow admins to list (query) and read any booking
      // The client-side logic in getAllBookings handles the primary admin check.
      // This rule is permissive to allow the client-side Firebase SDK call to succeed.
      allow list: if true; // Was: if isAdmin(); - Changed for client-side admin fetch
      allow get: if true; // Allow individual document reads by admins if needed, covered by list for queries

      // Allow admins to update bookings (e.g., status)
      // The client-side logic in updateBookingStatus handles the primary admin check.
      // This rule is permissive to allow the client-side Firebase SDK call to succeed.
      allow update: if true; // Was: if request.auth != null && isAdmin(); - Changed for client-side admin update
      
      // Deleting bookings might be restricted or admin-only
      allow delete: if isAdmin();
    }

    // Contact Submissions collection
    match /contactSubmissions/{submissionId} {
      // Allow authenticated users to create (submit) contact messages
      allow create: if request.auth != null;
      // Allow admins to read and list contact messages
      allow read, list: if isAdmin();
      // Generally, contact submissions are not updated or deleted by clients.
      allow update, delete: if false;
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
