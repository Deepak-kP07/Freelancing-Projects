
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is an admin
    function isAdmin(request) {
      // The ADMIN_EMAIL constant is an array in the app, so we check if the request auth email is in that list.
      // NOTE: This list must be manually kept in sync with the one in src/lib/constants.ts
      return request.auth.token.email in ['tumbikarthik2797@gmail.com', 'deepakperumal09@gmail.com'];
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can list and read any user's profile. This is required for the admin dashboard.
      allow list, read: if isAdmin(request);
      
      // A user can read and update their own profile.
      allow read, update: if request.auth != null && request.auth.uid == userId;

      // Only authenticated users can create their own profile entry.
      // The user's UID must match the document ID they are trying to create.
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for 'serviceBookings' collection
    match /serviceBookings/{bookingId} {
      // Admins can perform any action on bookings
      allow read, list, update, delete: if isAdmin(request);

      // Authenticated users can create bookings
      allow create: if request.auth != null;
      
      // Users can read bookings they created
      allow read: if request.auth != null && resource.data.userEmail == request.auth.token.email;
    }
    
    // Rules for the 'contactSubmissions' collection
    match /contactSubmissions/{submissionId} {
      // Admins can read the contact submissions.
      allow read, list: if isAdmin(request);
      
      // Any authenticated user can create a contact submission.
      allow create: if request.auth != null;
    }
  }
}
