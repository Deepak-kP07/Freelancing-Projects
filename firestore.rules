
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Function to identify admin users
    // IMPORTANT: Replace with your actual admin email(s)
    function isAdmin() {
      let adminEmails = ['tumbikarthik2797@gmail.com', 'deepakperumal09@gmail.com']; // <<< REPLACE THESE WITH YOUR ADMIN EMAILS
      return request.auth != null && request.auth.token.email in adminEmails;
    }

    // Users collection:
    // - A user can read their own profile.
    // - A user can create and update their own profile.
    match /users/{userId} {
      allow read, create, update: if request.auth != null && request.auth.uid == userId;
      // If admins need to read any user profile, you might add:
      // allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      // However, for now, the above rule is common for user-specific profiles.
    }

    // Service Bookings collection:
    // - Authenticated users can create bookings if the userEmail in the booking matches their own.
    // - Users can read their own bookings. Admins can read any booking.
    // - Admins can list all bookings (for the admin dashboard).
    // - Admins can update any booking (e.g., status).
    match /serviceBookings/{bookingId} {
      allow create: if request.auth != null && request.resource.data.userEmail == request.auth.token.email;
      allow read: if request.auth != null && (resource.data.userEmail == request.auth.token.email || isAdmin());
      allow list: if request.auth != null && isAdmin(); // For admin dashboard to get all bookings
      allow update: if request.auth != null && isAdmin(); // For admin to update status
      // Deletion can be restricted, e.g., only by admins or not at all.
      // allow delete: if request.auth != null && isAdmin();
    }

    // Counters collection for booking ID generation:
    // - Any authenticated user can read and write this specific document.
    // - This is necessary for the transaction in getNextBookingDisplayId to succeed.
    match /counters/serviceBookingCounter {
      allow read, write: if request.auth != null;
    }
  }
}
